#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/mouse.h>

#define QWERTY 0
#define COLEMAK 1
#define LT1 2
#define LT2 3
#define LT3 4

#define AS(keycode) &as LS(keycode) keycode // Autoshift Macro

&mt {
  quick-tap-ms = <200>;
  global-quick-tap;
  flavor = "tap-preferred";
  tapping-term-ms = <200>;
};

&sk {  // sticky-key config
    release-after-ms = <900>;  // release after 0.6s
    quick-release;             // no double capitalization when rolling keys
};

&lt {
    tapping-term-ms = <250>;
    quick_tap_ms = <200>;
    flavor = "tap-preferred";
};

&sl {  // sticky-layer config
    ignore-modifiers;          // allow chording sticky mods & layers
};

/ {

    behaviors {
        as: auto_shift {
            compatible = "zmk,behavior-hold-tap";
            label = "AUTO_SHIFT";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick-tap-ms = <200>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
        hm: homerow {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            label = "HOMEROW_MODS";
            flavor = "tap-unless-interrupted";
            tapping-term-ms = <300>; // tap if held more than this
            quick-tap-ms = <200>; // double click holds tap
            bindings = <&kp>, <&kp>;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";
        tri_layer {
            if-layers = <LT1 LT2>;
            then-layer = <LT3>;
        };
    };

    macros {
        mac_dotslash: mac_dotslash {
            label = "mac_dotslash";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp DOT &kp DOT &kp FSLH>;
        };
        mac_obkt: mac_obkt {
            label = "mac_open_brackets";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp LBKT &kp RBKT &kp LEFT>;
        };    
        mac_obrc: mac_obrc {
            label = "mac_open_braces";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp LBRC &kp RBRC &kp LEFT>;
        };    
        mac_opar: mac_opar {
            label = "mac_open_parentheses";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp LPAR &kp RPAR &kp LEFT>;
        };
    };

    combos {
        compatible = "zmk,combos";
        combo_jk_esc {
            timeout-ms = <100>;
            key-positions = <19 20>;
            bindings = <&kp ESC>;
            layers = <QWERTY COLEMAK>;
        };
        combo_dotdotslash {
            timeout-ms = <100>;
            key-positions = <35 36>;
            bindings = <&mac_dotslash>;
            layers = <QWERTY COLEMAK>;
        };
        colemak_layout_switch {
            bindings = <&tog COLEMAK>;
            key-positions = <2 3>;
            layers = <QWERTY>;
        };
        qwerty_layout_switch {
            bindings = <&tog QWERTY>;
            key-positions = <3 4>;
            layers = <COLEMAK>;
        };
        combo_sys_reset {
            timeout-ms = <50>;
            key-positions = <14 15 16>;
            bindings = <&sys_reset>;
            layers = <LT1>;
        };
        combo_boot_loader {
            timeout-ms = <50>;
            key-positions = <26 27 28>;
            bindings = <&bootloader>;
            layers = <LT1>;
        };
        combo_bt_prev {
            key-positions = <1 2>;
            bindings = <&bt BT_PRV>;
            layers = <LT1>;
        };
        combo_bt_next {
            key-positions = <2 3>;
            bindings = <&bt BT_NXT>;
            layers = <LT1>;
        };
        combo_bt_clear {
            key-positions = <1 2 3>;
            bindings = <&bt BT_CLR>;
            layers = <LT1>;
        };
        combo_app_menu {
            key-positions = <7 8>;
            bindings = <&kp LG(LS(SLASH))>;
            layers = <QWERTY COLEMAK>;
        };
        combo_spotlight {
            key-positions = <20 21>;
            bindings = <&kp LG(SPACE)>;
            layers = <QWERTY COLEMAK>;
        };
        combo_terminal {
            key-positions = <19 20 21>;
            bindings = <&kp LG(RET)>;
            layers = <QWERTY COLEMAK>;
        };
    };

        keymap {
                compatible = "zmk,keymap";

 qwerty_home_mods_layer {
            bindings = <
&to QWERTY_HOME_MODS &kp Q   &kp W   &kp E   &kp R   &kp T                       &kp Y   &kp U   &kp I       &kp O       &kp P       &to QWERTY_AUTO_SHIFT
&mt LCTRL ESC  &hm LGUI A   &hm LALT S   &hm LCTRL D   &hm LSHFT F      &kp G   &kp H   &hm RSHFT J   &hm RCTRL K       &hm RALT L       &hm RGUI SEMI    &kp SQT
&sk LGUI    &kp Z   &kp X   &kp C   &kp V   &kp B  &none  &kp K_MUTE    &kp N   &kp M   &kp COMMA   &kp DOT     &kp FSLH    &sk LALT
                    &sk LCTRL  &lt LOWER SPACE  &mt LGUI TAB     &mt LALT BKSP    &lt RAISE RET   &sk LSHIFT
            >;
        sensor-bindings = <&inc_dec_kp PG_UP PG_DN &inc_dec_kp C_VOL_DN C_VOL_UP>;

        };

 qwerty_auto_shift_layer {
            bindings = <
&to QWERTY_HOME_MODS    AS(Q)   AS(W)   AS(E)   AS(R)   AS(T)                       AS(Y)   AS(U)   AS(I)       AS(O)       AS(P)       &to COLEMAK_HOME_MODS
&mt LCTRL ESC   AS(A)   AS(S)   AS(D)   AS(F)   AS(G)                       AS(H)   AS(J)   AS(K)       AS(L)       AS(SEMI)    AS(SQT)
&sk LGUI        AS(Z)   AS(X)   AS(C)   AS(V)   AS(B)  &none  &kp K_MUTE    AS(N)   AS(M)   AS(COMMA)   AS(DOT)     AS(FSLH)    &sk LALT
                    &sk LCTRL  &lt LOWER SPACE  &mt LGUI TAB     &mt LALT BKSP    &lt RAISE RET   &sk LSHIFT
            >;
        sensor-bindings = <&inc_dec_kp PG_UP PG_DN &inc_dec_kp C_VOL_DN C_VOL_UP>;

        };

 colemak_home_mods_layer {

            bindings = <
&to QWERTY_HOME_MODS     &kp Q   &kp W   &kp F   &kp P   &kp B                       &kp J   &kp L   &kp U       &kp Y       &kp SEMI       &to COLEMAK_AUTO_SHIFT
&mt LCTRL ESC   &hm LGUI A   &hm LALT R   &hm LCTRL S   &hm LSHFT T   &kp G           &kp M   &hm RSHFT N   &hm RCTRL E       &hm RALT I       &hm RGUI O    &kp SQT
&sk LGUI    &kp Z   &kp X   &kp C   &kp D   &kp V  &none  &kp K_MUTE    &kp K   &kp H   &kp COMMA   &kp DOT     &kp FSLH    &sk LALT
                    &sk LCTRL  &lt LOWER SPACE  &mt LGUI TAB     &mt LALT BKSP    &lt RAISE RET   &sk LSHIFT
            >;
        sensor-bindings = <&inc_dec_kp PG_UP PG_DN &inc_dec_kp C_VOL_DN C_VOL_UP>;
        };

 colemak_auto_shift_layer {

            bindings = <
&to QWERTY_HOME_MODS      AS(Q)   AS(W)   AS(F)   AS(P)   AS(B)                       AS(J)   AS(L)   AS(U)       AS(Y)       AS(SEMI)       &none
&mt LCTRL ESC   AS(A)   AS(R)   AS(S)   AS(T)   AS(G)                       AS(M)   AS(N)   AS(E)       AS(I)       AS(O)    AS(SQT)
&sk LGUI        AS(Z)   AS(X)   AS(C)   AS(D)   AS(V)  &none  &kp K_MUTE    AS(K)   AS(H)   AS(COMMA)   AS(DOT)     AS(FSLH)    &sk LALT
                    &sk LCTRL  &lt LOWER SPACE  &mt LGUI TAB     &mt LALT BKSP    &lt RAISE RET   &sk LSHIFT
            >;
        sensor-bindings = <&inc_dec_kp PG_UP PG_DN &inc_dec_kp C_VOL_DN C_VOL_UP>;
        };

lower_layer {

            bindings = <
&trans &kp APOS  &kp LT         &kp GT          &kp DQT         &kp KP_DOT                  &kp AMPS    &kp UNDER   &kp LBKT    &kp RBKT    &kp PRCNT   &trans
&trans &kp EXCL  &kp KP_MINUS   &kp KP_PLUS     &kp KP_EQUAL    &kp HASH                    &kp PIPE    &kp COLON   &kp RBKT    &kp BSLH    &kp QMARK   &trans
&trans &kp CARET &kp KP_SLASH   &kp KP_ASTERISK &kp BACKSLASH   &kp GRAVE   &trans &trans   &kp TILDE   &kp DLLR    &kp LBRC    &kp RBRC    &kp AT      &trans
                                &trans          &trans          &trans                      &trans      &trans      &trans
            >;
        sensor-bindings = <&inc_dec_kp PG_UP PG_DN &inc_dec_kp C_VOL_DN C_VOL_UP>;
        };


raise_layer {

            bindings = <
&trans  &kp N1   &kp N2    &kp N3    &kp N4    &kp N5                                   &kp N6    &kp N7    &kp N8    &kp N9    &kp N0  &trans
&trans  &mkp MB4    &mkp LCLK   &mkp MCLK   &mkp RCLK   &mkp MB5                        &kp LEFT    &kp DOWN    &kp UP      &kp RIGHT   &kp K_APP &trans
&trans  &trans      &kp K_REDO  &kp K_CUT   &kp K_COPY  &kp K_PASTE   &none &kp K_MUTE  &kp HOME    &kp PG_DN   &kp PG_UP   &kp END     &trans &trans
                                &trans      &trans      &trans                          &trans      &trans      &trans
            >;
        sensor-bindings = <&inc_dec_kp PG_UP PG_DN &inc_dec_kp C_VOL_DN C_VOL_UP>;
        };

    adjust_layer {

            bindings = <
&kp F1 &kp F2 &kp F3 &kp F4 &kp F5 &kp F6 &kp F7 &kp F8 &kp F9 &kp F10 &kp F11 &kp F12
&bt BT_CLR  &bt BT_SEL 0    &bt BT_SEL 1    &bt BT_SEL 2        &bt BT_SEL 3    &bt BT_SEL 4                        &kp K_MUTE  &kp K_VOL_DN    &kp K_VOL_UP    &trans  &trans  &trans
&trans      &trans          &sys_reset      &bootloader         &bt BT_PRV      &bt BT_NXT &bootloader &bootloader  &kp C_PP    &kp C_PREV      &kp C_NEXT      &trans  &trans  &trans
                           &trans  &trans    &trans             &trans   &trans   &trans
            >;
        sensor-bindings = <&inc_dec_kp PG_UP PG_DN &inc_dec_kp C_VOL_DN C_VOL_UP>;
        };


        };
;
